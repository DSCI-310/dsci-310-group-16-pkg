% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/10_metric-bind.R
\name{metric_bind}
\alias{metric_bind}
\title{Bind metric result data frames using rbindlist function}
\usage{
metric_bind(
  train_df,
  test_df,
  metric,
  method,
  kmin = "NA",
  target_variable,
  model_list
)
}
\arguments{
\item{train_df}{A data frame containing the training data}

\item{test_df}{A data frame containing the test data}

\item{metric}{A character string indicating the metric to be calculated. Possible values are "rmse", "mae", "r2"}

\item{method}{A character string indicating the type of model to be fitted. Possible values are "lm" (for linear regression) and "glm" (for generalized linear models).}

\item{kmin}{An integer indicating the minimum value of k for k-fold cross-validation. If set to "NA", no cross-validation is performed.}

\item{target_variable}{A character string indicating the name of the target variable.}

\item{model_list}{A list containing the names of the predictor variables to be used in the linear models.}
}
\value{
A data frame containing the metric results for each predictor variable.
}
\description{
This function binds together data frames created from the \code{create_metric_df()} function using the \code{rbindlist()} function from the \code{data.table} package. The data frames are created by fitting linear models to the training data using the predictor variables provided in \code{model_list}, and then calculating the specified metric on the test data.
}
\examples{
# load data
data(mtcars)

train_df <- mtcars[1:16, ]
test_df <- mtcars[17:32, ]

single_predictors <- list("mpg", "cyl", "disp", "hp", "am")
multiple_predictors <- list(c("mpg", "cyl"), c("disp", "am"), c("cyl", "am") )

# Single predictor lm regression model
metric_bind(train_df=train_df, test_df=test_df, metric="rmse", method="lm", kmin="NA", target_variable='gear', model_list=single_predictors)

# Single predictor kknn regression model
metric_bind(train_df=train_df, test_df=test_df, metric="rmse", method="kknn", kmin=4, target_variable='gear', model_list=single_predictors)
# Multiple predictors lm regression model
metric_bind(train_df=train_df, test_df=test_df, metric="rmse", method="lm", kmin="NA", target_variable='gear', model_list=multiple_predictors)

# Multiple predictors kknn regression model
metric_bind(train_df=train_df, test_df=test_df, metric="rmse", method="kknn", kmin=8, target_variable='gear', model_list=multiple_predictors)

}
